<?php
    include_once('env.php');

    function spawnBackgroundProcess($sProcessLine)
    {
        $aPipes = array();
        $rProcess = proc_open($sProcessLine, array(), $aPipes);
        proc_close($rProcess);
    }

    function get_file_full_path($base_path, $filename){
        return implode('/', array_filter(explode('/', $base_path.$filename), function($data){
            return $data != '';
        })).'.php';
    }

    $command = new class {
        private $commands = [];

        public function create($command, $action){
            $this->commands[$command] = $action;
        }

        public function execute(){
            global $argv;

            $command = implode(' ', array_slice($argv, 1));

            foreach($this->commands as $pattern => $action){
                if(preg_match($pattern, $command, $matches)){
                    if($action(...array_slice($matches, 1)) === false)
                        break;

                    echo "command success.";
                    exit;
                }
            }

            echo 'error: Unknown command or arguments '.$command;
        }

    };

    //Help...
    $command->create('/^help$/', function(){
        echo file_get_contents('samplefiles/help');
        exit;
    });

    $command->create('/^$/', function(){
        echo file_get_contents('samplefiles/help');
        exit;
    });

    $command->create('/^serv --help$/', function(){
        echo "php lai serv [options]".PHP_EOL;
        echo "啟動測試伺服器".PHP_EOL;
        echo "Options:".PHP_EOL;
        echo "    --port={port}     將port設定為{port}的值".PHP_EOL;
        echo "    default:          啟動測試伺服器".PHP_EOL;
        exit;
    });

    $command->create('/^make:controller --help$/', function(){
        echo "php lai make:controller [arguments] [options]".PHP_EOL;
        echo "建立控制器".PHP_EOL;
        echo "Arguments:".PHP_EOL;
        echo "    產生的控制器名稱".PHP_EOL;
        echo "Options:".PHP_EOL;
        echo "    --blank                  產生全白的控制器".PHP_EOL;
        echo "    --api                    產生具有CRUD空方法的控制器".PHP_EOL;
        echo "    --api --routing={uri}    產生具有CRUD空方法的控制器外，建立對應uri的CRUD路由".PHP_EOL;
        echo "    default:                 產生具有index方法的控制器".PHP_EOL;
        exit;
    });

    $command->create('/^make:model --help$/', function(){
        echo "php lai make:model [arguments] [options]".PHP_EOL;
        echo "建立模型".PHP_EOL;
        echo "Arguments:".PHP_EOL;
        echo "    產生的模型名稱".PHP_EOL;
        echo "Options:".PHP_EOL;
        echo "    --table={name}   自動將對應的表名稱設定為{name}".PHP_EOL;
        echo "    default:         僅產生模型".PHP_EOL;
        exit;
    });

    $command->create('/^make:middleware --help$/', function(){
        echo "php lai make:model [arguments] [options]".PHP_EOL;
        echo "建立中介層".PHP_EOL;
        echo "Arguments:".PHP_EOL;
        echo "    產生的中介層名稱".PHP_EOL;
        echo "Options:".PHP_EOL;
        echo "    --name={name}    自動將該中介層以{name}註冊".PHP_EOL;
        echo "    default:         僅產生中介層".PHP_EOL;
        exit;
    });

    $command->create('/^route:list --help$/', function(){
        echo "php lai route:list".PHP_EOL;
        echo "顯示所有路由".PHP_EOL;
        exit;
    });


    //commands..
    $command->create('/^serv$/', function(){
        $host = HOST;
        $port = PORT;
        spawnBackgroundProcess("PHP -S {$host}:{$port} public/index.php");
    });

    $command->create('/^serv --port=(\S+)$/', function($port){
        $host = HOST;
        spawnBackgroundProcess("PHP -S {$host}:{$port} public/index.php");
    });

    $command->create('/^make:controller (\S+)$/', function($filename){
        $base_path = './app/controller/';
        $filepath = get_file_full_path($base_path, $filename);
        if(file_exists($filepath)){
            error_log('error: file '.$filepath.' exists.');
            exit;
        }

        $samplefile = 'samplefiles/controller.php';

        if(!file_exists($samplefile))
            return false;

        copy($samplefile, $filepath);
    });

    $command->create('/^make:controller (\S+) --(\S+)$/', function($filename, $type){
        $base_path = './app/controller/';
        $filepath = get_file_full_path($base_path, $filename);
        if(file_exists($filepath)){
            error_log('error: file '.$filepath.' exists.');
            exit;
        }

        $samplefile = 'samplefiles/controller-'.$type.'.php';

        if(!file_exists($samplefile))
            return false;

        copy($samplefile, $filepath);
    });

    $command->create('/^make:controller (\S+) --api --routing=(\S+)$/', function($filename, $routename){
        $base_path = './app/controller/';
        $filepath = get_file_full_path($base_path, $filename);
        if(file_exists($filepath)){
            error_log('error: file '.$filepath.' exists.');
            exit;
        }

        $samplefile = 'samplefiles/controller-api.php';

        if(!file_exists($samplefile))
            return false;

        copy($samplefile, $filepath);
        // $params = array_merge(...array_fill(0, 5, [$routename, $filename]));
        $params = array_merge([$routename], array_fill(0, 5, $filename));
        $file = fopen('./autoload/web.php', 'a');
        fwrite($file, sprintf(file_get_contents('samplefiles/api-routing.php'), ...$params));
        fclose($file);

    });

    $command->create('/^make:model (\S+)$/', function($filename){
        $base_path = './app/';
        $filepath = get_file_full_path($base_path, $filename);
        if(file_exists($filepath)){
            error_log('error: file '.$filepath.' exists.');
            exit;
        }

        $samplefile = 'samplefiles/model.php';

        if(!file_exists($samplefile))
            return false;

        $file = fopen($filepath, 'w');
        fwrite($file, sprintf(file_get_contents($samplefile), $filename));
        fclose($file);
    });

    $command->create('/^make:model (\S+) --table=(\S+)$/', function($filename, $table){
        $base_path = './app/';
        $filepath = get_file_full_path($base_path, $filename);
        if(file_exists($filepath)){
            error_log('error: file '.$filepath.' exists.');
            exit;
        }

        $samplefile = 'samplefiles/model-table.php';

        if(!file_exists($samplefile))
            return false;

        $file = fopen($filepath, 'w');
        fwrite($file, sprintf(file_get_contents($samplefile), $filename, $table));
        fclose($file);
    });

    $command->create('/^make:middleware (\S+)$/', function($filename){
        $base_path = './app/middleware/';
        $filepath = get_file_full_path($base_path, $filename);
        if(file_exists($filepath)){
            error_log('error: file '.$filepath.' exists.');
            exit;
        }

        $samplefile = 'samplefiles/middleware.php';

        if(!file_exists($samplefile))
            return false;

        $file = fopen($filepath, 'w');
        fwrite($file, sprintf(file_get_contents($samplefile), ucfirst($filename)));
        fclose($file);
    });

    $command->create('/^make:middleware (\S+) --name=(\S+)$/', function($filename, $name){
        $base_path = './app/middleware/';
        $filepath = get_file_full_path($base_path, $filename);

        if(file_exists($filepath)){
            error_log('error: file '.$filepath.' exists.');
            exit;
        }

        $samplefile = 'samplefiles/middleware.php';

        if(!file_exists($samplefile))
            return false;

        $file = fopen($filepath, 'w');
        fwrite($file, sprintf(file_get_contents($samplefile), ucfirst($filename)));
        fclose($file);

        $routeMiddleware = explode(PHP_EOL, file_get_contents('autoload/routeMiddleware.php'));
        for($i = 0; $i < count($routeMiddleware); $i++){
            if(trim($routeMiddleware[$i]) == '];'){
                array_splice($routeMiddleware, $i, 0, [
                    '        // cli generate:',
                    '        \''.$name.'\' => \''.$filename.'\''
                ]);
                file_put_contents('autoload/routeMiddleware.php', implode(PHP_EOL, $routeMiddleware));
                break;
            }
        }
    });

    $command->create('/^route:list$/', function(){
        include_once('function.php');
        include_once('autoload/web.php');

        $maxlens = [
            'method' => max(array_map(function($table){
                return max(array_map(function($data){
                    return mb_strlen($data['method']);
                }, $table));
            }, Route::$route_table)),
            'url' => max(array_map(function($table){
                return max(array_map(function($data){
                    return mb_strlen($data['url']);
                }, $table));
            }, Route::$route_table)),
            'action' => max(array_map(function($table){
                return max(array_map(function($data){
                    return mb_strlen($data['action']);
                }, $table));
            }, Route::$route_table)),
            'middleware' => max(array_map(function($table){
                return max(array_map(function($data){
                    return mb_strlen($data['middleware']);
                }, $table));
            }, Route::$route_table))
        ];

        echo '+-'.str_repeat('-', 10).'+-'.str_repeat('-', max(6, $maxlens['url']+3)).'+-'.str_repeat('-', max(10, $maxlens['action']+3)).'+-'.str_repeat('-', max(13, $maxlens['middleware']+3)).'+'.PHP_EOL;
        echo '| '.str_pad('Method', 10, ' ', STR_PAD_BOTH).'| '.str_pad('URL', max(6, $maxlens['url']+3), ' ', STR_PAD_BOTH).'| '.str_pad('Action', max(6, $maxlens['action']+3), ' ', STR_PAD_BOTH).'| '.str_pad('Middleware', max(13, $maxlens['middleware']+3), ' ', STR_PAD_BOTH).'| '.PHP_EOL;
        echo '+-'.str_repeat('-', 10).'+-'.str_repeat('-', max(6, $maxlens['url']+3)).'+-'.str_repeat('-', max(10, $maxlens['action']+3)).'+-'.str_repeat('-', max(13, $maxlens['middleware']+3)).'+'.PHP_EOL;
        foreach(Route::$route_table as $method => $routes){
            foreach($routes as $route){
                echo '| '.str_pad($route['method'], 10).'| '.str_pad($route['url'], max(6, $maxlens['url']+3)).'| '.str_pad($route['action'], max(6, $maxlens['action']+3)).'| '.str_pad($route['middleware'], max(13, $maxlens['middleware']+3)).'| '.PHP_EOL;
            }
        }
        echo '+-'.str_repeat('-', 10).'+-'.str_repeat('-', max(6, $maxlens['url']+3)).'+-'.str_repeat('-', max(10, $maxlens['action']+3)).'+-'.str_repeat('-', max(13, $maxlens['middleware']+3)).'+'.PHP_EOL;

    });

    $command->execute();